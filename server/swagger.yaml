openapi: 3.0.0
info:
  version: "1"
  title: Budget API
servers:
  - url: "http://192.168.1.200/backend/v1"
security:
  - bearerAuth: []
paths:
  "/user":
    post:
      summary: "Add user to database"
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
            example:
              name: "Steven"
              email: "mail@mail.com"
              password: "strong-password"
      responses:
        "201":
          description: "OK - User created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
              example:
                message: "Created user with id: 5febebfa750757ad5094bd48"
          links:
            GetUserByUserId:
              description: >
                The '_id' value returned in the response can be used as
                the 'userId' parameters in 'GET /user/{userId}' and
                'PUT /user/{userId}'
              operationId: getUser
              parameters:
                _id: $response.body#/_id
        "500":
          description: "Invalid fields in body"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
                example:
                  message: "Invalid fields in body"
    get:
      summary: "Get array of all users from the database"
      tags:
        - User
      responses:
        "200":
          description: "OK - user array"
          content:
            application/json:
              schema:
                type: array
                properties:
                  schema:
                    $ref: "#/components/schemas/user"
              example:
                - _id: "5febd5240d17779c0747245f"
                  name: "Steven"
                  email: "Email@mail.com"
                  password: "hashed-password"
                - _id: "5febd5240d17779c07472451"
                  name: "Justin"
                  email: "Email@mail.com"
                  password: "hashed-password"
                - _id: "5febd5240d17779c07472452"
                  name: "Matthew"
                  email: "Email@mail.com"
                  password: "hashed-password"
                - _id: "5febd5240d17779c07472453"
                  name: "Jinda"
                  email: "Email@mail.com"
                  password: "hashed-password"
  "/user/{userId}":
    get:
      summary: "Get user details from the database"
      tags:
        - User
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          description: "User ID to fetch"
          schema:
            type: string
      responses:
        "200":
          description: "OK - user object"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
                example:
                  _id: "5febd5240d17779c0747245f"
                  name: "Steven"
                  email: "Email@mail.com"
                  password: "hashed-password"
        "500":
          description: "Invalid userId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
                example:
                  message: "Invalid userId"
    put:
      summary: "Update a user in database"
      tags:
        - User
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            example:
              name: "New name"
              email: "new@email.com"
              password: "newpassword"
      responses:
        "200":
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
              example:
                message: "Updated user with id: 5febd5240d17779c0747245f"
        "500":
          description: "Invalid userId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
                example:
                  message: "Invalid userId"
  "/budget":
    post:
      summary: "Add budget to database"
      tags:
        - Budget
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                year:
                  type: number
            example:
              userId: "5feac6d629605f1e4ec9b2f6"
              year: 2020
      responses:
        "201":
          description: "OK - Budget created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
              example:
                message: "Created budget with id: 5febd5240d17779c0747245f"
          links:
            getBudgetByBudgetId:
              description: >
                The '_id' value returned in the response can be used as
                the 'budgetId' parameters in 'GET /budget/{budgetId}' and
                'PUT /budget/{budgetId}'
              operationId: getBudget
              parameters:
                _id: $response.body#/_id
        "500":
          description: "Invalid fields in body"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
                example:
                  message: "Invalid fields in body"
    get:
      summary: "Get array of all budgets from the database"
      tags:
        - Budget
      responses:
        "200":
          description: "OK - budget array"
          content:
            application/json:
              schema:
                type: array
                properties:
                  schema:
                    $ref: "#/components/schemas/budget"
              example:
                - _id: "5fec0e1d750757ad5094bd49"
                  userId: "5febd5240d17779c0747245f"
                  year: 2020
                  months:
                    [
                      "5fec0e1d750757ad5094bd4a",
                      "5fec0e1d750757ad5094bd4b",
                      "5fec0e1d750757ad5094bd4c",
                      "5fec0e1d750757ad5094bd4d",
                      "5fec0e1d750757ad5094bd4e",
                      "5fec0e1d750757ad5094bd4f",
                      "5fec0e1d750757ad5094bd50",
                      "5fec0e1d750757ad5094bd51",
                      "5fec0e1d750757ad5094bd52",
                      "5fec0e1d750757ad5094bd53",
                      "5fec0e1d750757ad5094bd54",
                      "5fec0e1d750757ad5094bd55",
                    ]
                - _id: "5febd52b0d17779c07472460"
                  userId: "5febd5240d17779c0747245f"
                  year: 2021
                  months:
                    [
                      "5febd52b0d17779c07472461",
                      "5febd52b0d17779c07472462",
                      "5febd52b0d17779c07472463",
                      "5febd52b0d17779c07472464",
                      "5febd52b0d17779c07472465",
                      "5febd52b0d17779c07472466",
                      "5febd52b0d17779c07472467",
                      "5febd52b0d17779c07472468",
                      "5febd52b0d17779c07472469",
                      "5febd52b0d17779c0747246a",
                      "5febd52b0d17779c0747246b",
                      "5febd52b0d17779c0747246c",
                    ]
  "/budget/{budgetId}":
    get:
      summary: "Get budget details from the database"
      tags:
        - Budget
      operationId: getBudget
      parameters:
        - name: budgetId
          in: path
          required: true
          description: "Budget ID to fetch"
          schema:
            type: string
      responses:
        "200":
          description: "OK - budget object"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/budget"
                example:
                  _id: "5fec0e1d750757ad5094bd49"
                  userId: "5febd5240d17779c0747245f"
                  year: 2020
                  months:
                    [
                      "5fec0e1d750757ad5094bd4a",
                      "5fec0e1d750757ad5094bd4b",
                      "5fec0e1d750757ad5094bd4c",
                      "5fec0e1d750757ad5094bd4d",
                      "5fec0e1d750757ad5094bd4e",
                      "5fec0e1d750757ad5094bd4f",
                      "5fec0e1d750757ad5094bd50",
                      "5fec0e1d750757ad5094bd51",
                      "5fec0e1d750757ad5094bd52",
                      "5fec0e1d750757ad5094bd53",
                      "5fec0e1d750757ad5094bd54",
                      "5fec0e1d750757ad5094bd55",
                    ]
        "500":
          description: "Invalid budgetId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
                example:
                  message: "Invalid budgetId"
    put:
      summary: "Update a budget in database"
      tags:
        - Budget
      operationId: getBudget
      parameters:
        - name: budgetId
          in: path
          required: true
          description: budget ID to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/budget"
            example:
              userId: "5febd5240d17779c0747245f"
              year: 2070
      responses:
        "200":
          description: Budget successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
              example:
                message: "Updated user with id: 5fec0e1d750757ad5094bd49"
        "500":
          description: "Invalid budgetId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
                example:
                  message: "Invalid budgetId"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, for documentation purposes only
  schemas:
    user:
      title: user
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
    budget:
      title: budget
      type: object
      properties:
        _id:
          type: string
        year:
          type: number
        months:
          type: array
          items:
            type: string
    month:
      title: month
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        incomes:
          type: array
          items:
            type: string
        expenses:
          type: array
          items:
            type: string
    income:
      title: income
      type: object
      properties:
        budgetId:
          type: string
        monthId:
          type: string
        name:
          type: string
        amount:
          type: number
        frequency:
          type: string
    expense:
      title: expense
      type: object
      properties:
        budgetId:
          type: string
        monthId:
          type: string
        name:
          type: string
        amount:
          type: number
        frequency:
          type: string
        isFixedAmount:
          type: boolean
    message:
      title: message
      type: object
      properties:
        message:
          type: string
